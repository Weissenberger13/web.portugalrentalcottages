@using BootstrapVillas.Models
@using BootstrapVillas.Content.Classes
@using BootstrapVillas.HTMLHelper
@using BootstrapVillas.Content.Classes.CurrencyConverter


@{
     
    string format = "dd/MM/yyyy";
    string _Imagejpg = "_Image.jpg";

    //get from session - propertyBooking
    List<Booking> VillaBookings = new List<Booking>();
    VillaBookings = (List<Booking>)Session["Cart_PropertyBookings"]; //where type = villa

    //get from session ExtraBookings
    List<BookingExtraSelection> BookingExtraSelections = new List<BookingExtraSelection>(); //where type = extras
    BookingExtraSelections = (List<BookingExtraSelection>)Session["Cart_ExtraBookings"];


    var extras = new List<BookingExtra>();
    using (PortugalVillasContext db = new PortugalVillasContext())
    {
        extras = db.BookingExtras.ToList();
    }
    
    //end viewbag pulls
    int NoOfItemsInCart = 0;

    if (VillaBookings != null)
    { NoOfItemsInCart += VillaBookings.Count; }
    if (BookingExtraSelections != null)
    { NoOfItemsInCart += BookingExtraSelections.Count; }



    var runningTotalPrice = 0.00M;


    var count = 0;


    var ServerPath = (DirectoryInfo)Session["ServerPath"];
    
}

@section DocumentReady {

    <script type="text/javascript">

        $(".selectedStart").datepicker(
        {
            //add JSON
            dateFormat: 'mm-dd-yy',
            //beforeShowDay: disableAllTheseDays,
            changeMonth: false,
            changeYear: true,
            showButtonPanel: true
        });

        $(".selectedEnd").datepicker(
        {
            //add JSON
            dateFormat: 'mm-dd-yy',
            //beforeShowDay: disableAllTheseDays,
            changeMonth: false,
            changeYear: true,
            showButtonPanel: true
        });
    </script>

    <script>
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_GB/all.js#xfbml=1";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>
    <script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "twitter-wjs");</script>
    <script type="text/javascript">
        (function () {
            var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
            po.src = 'https://apis.google.com/js/plusone.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
        })();

    </script>

}


<div class="row-fluid">
    <div class="span10 offset1" id="section1">
        <!-- sub navigation with social media etc. -->
        <div id="socialMedia">
            <div class="facebook">
                <div id="fb-root"></div>
                <div class="fb-like" data-href="http://www.portugalrentalcottages.com" data-send="true" data-layout="button_count" data-width="450" data-show-faces="true" data-action="recommend" data-font="tahoma"></div>
            </div>
            <div class="twitter">
                <a href="https://twitter.com/share" class="twitter-share-button" data-url="http://www.portugalrentalcottages.com" data-via="portugalrentalcottages" data-hashtags="portugalholidays">Tweet</a>
            </div>
            <div class="googlePlus">
                <!-- Place this tag where you want the +1 button to render. -->
                <div class="g-plusone" data-size="tall" data-annotation="inline" data-width="300"></div>
                <!-- Place this tag after the last +1 button tag. -->
            </div>
        </div>
        <a href="#" onclick="history.go(-1);return false;">
            <div class="pull-right"><i class="fa fa-fw fa-undo"></i>Back to Last Page</div>
        </a>
    </div>
</div>

<div class="row-fluid">
    <div class="span7 offset1 whiteBg" style="position: relative;">
        <div class="row-fluid" style="border-bottom: 1px solid #ddd; margin-bottom: 20px;">
            <div class="wizard">
                <a><span class="badge">1</span>Property</a>
                <a><span class="badge">2</span>Other Services</a>
                <a class="current"><span class="badge badge-inverse">3</span>Cart</a>
                <a><span class="badge">4</span> Complete</a>
            </div>
        </div>
        <div class="row-fluid" style="position: relative;">
            <div class="span12">
                <h4 class="pull-left"><i style="padding-right: 7px; font-size: 18px" class="fa fa-fw fa-shopping-cart"></i><label class="toTranslate">Shopping Cart</label></h4>
                @*Price Selection using JQuery*@
                <div class="pull-right">
                    <small>Currency:</small>

                    <select id="currencyConverter">
                        <option value="GBP" class="toTranslate">UK Pound £</option>
                        <option value="EUR" class="toTranslate">Euro €</option>
                        <option value="USD" class="toTranslate">U.S. Dollar $</option>
                        <option value="CAD" class="toTranslate">Canadian Dollar $</option>
                        <option value="JPY" class="toTranslate">Japanese Yen ¥ </option>

                    </select>
                </div>
            </div>
        </div>

        <!-- Begin checkout content -->
        @* The property *@
        <div class="row-fluid" style="margin-top: 20px;">
            <div class="span12">
                @*FOR EACH PROPERTY*@

                @{
              
                    
                    if (VillaBookings != null && VillaBookings.Count > 0)
                    {
                        foreach (var prop in VillaBookings)
                        {
                            var cleanPrice = prop.CleaningPostVisitPrice ?? 0.00M;
                            var linenPrice = prop.ExtraLininSetPrice ?? 0.00M;
                            var heatingPrice = prop.HeatingPrice ?? 0.00M;
                            var midCleanPrice = prop.MidVactionCleaningPrice ?? 0.00M;
                            var swimHeatPrice = prop.SwimmingPoolHeatingPrice ?? 0.00M;
                            var towelsPrice = prop.TowelsPrice ?? 0.00M;
                            //add the total of the price to the running total
                            decimal extraPrice = cleanPrice + linenPrice + heatingPrice + midCleanPrice + swimHeatPrice + towelsPrice;

                            decimal totalPrice = extraPrice + prop.BookingPrice ?? 0.00M;

                            runningTotalPrice += totalPrice;


                            string startDate = DateTime.Parse(@prop.StartDate.ToString()).ToString(format);
                            string endDate = DateTime.Parse(@prop.EndDate.ToString()).ToString(format);
                            int itemIndex = VillaBookings.IndexOf(prop);
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <a href="#"><b>@prop.Property.LegacyReference @prop.Property.HouseName</b></a>
                                    <div class="pull-right">
                                        @* <button class="btn btn-mini btn-info"><i class="fa fa-fw fa-pencil-square-o"></i>@Html.ActionLink("Edit", "EditPropertyBooking", "EditProvisionalBooking", new { StartDate = startDate, EndDate = endDate, PRCRef = @prop.BookingPRCReference }, null)</button>*@
                                        <button class="btn btn-mini btn-danger"><i class="fa fa-fw fa-trash-o"></i>@Html.ActionLink("Remove", "DeleteItemFromSessionBookingCart", "PropertyView", new { StartDate = startDate, PRCRef = @prop.BookingPRCReference, SessionVariableToDeleteFrom = "Cart_PropertyBookings", BookingGUID = prop.BookingGUID }, null)</button>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="thumbnail span4">
                                        <img class="span12" src="@PRCImageCollection.GetRandomImageURLForProperty(Property.GetPropertyByID((long)prop.PropertyID), ServerPath)" />
                                    </div>
                                    <div class="span8">
                                        <table class="table table-condensed">
                                            <tbody>
                                                <tr>
                                                    <td class="toTranslate">Price:</td>
                                                    <td>
                                                        <b class="price">@Html.CurrencySymbol()</b><b id="originalCurrency@{@count}" class="priceTest">@Html.CurrencyConvert(prop.BookingPrice, DependencyResolver.Current.GetService<ICurrencyConvert>())</b>
                                                    </td>
                                                    <td>                                                        
                                                        <b id="convertedCurrency@{@count}"></b>
                                                    </td>
                                                    
                                                    @{ count++;}


                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Extra Services Price:</td>
                                                    <td>
                                                        <b class="price">@Html.CurrencySymbol()</b><b id="originalCurrency@{@count}" class="priceTest">@Html.CurrencyConvert(extraPrice, DependencyResolver.Current.GetService<ICurrencyConvert>())</b>
                                                    </td>
                                                    <td>                                                       
                                                        <b id="convertedCurrency@{@count}"></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Reference:</td>
                                                    <td>@prop.Property.LegacyReference</td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Start Date:</td>
                                                    <td><a id="editStartDate" href="#">@prop.StartDate.ToString().Substring(0, 10)</a></td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">End Date:</td>
                                                    <td><a id="editEndDate" href="#">@prop.EndDate.ToString().Substring(0, 10)</a></td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">No. of Nights</td>
                                                    <td>@prop.NumberOfNights</td>
                                                </tr>
                                                <tr hidden>
                                                    <td id="PropertyIndex_@itemIndex">@itemIndex</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            count++;
                        }
                    }
                }
            </div>
        </div>


        @* The Car Rental *@
        <div class="row-fluid">
            <div class="span12">
                @{
                                        
                    if (BookingExtraSelections != null && BookingExtraSelections.Count > 0)
                    {
                        foreach (var extra in BookingExtraSelections)
                        {
                            var templateExtra = extras.Where(x => x.BookingExtraID.Equals(extra.BookingExtraID)).FirstOrDefault();
                            
                            decimal price = extra.BESPrice ?? 0.00M;
                            decimal extraPrice = extra.BESExtraServicesPrice ?? 0.00M;

                            var totalPrice = price + extraPrice;

                            runningTotalPrice += Convert.ToDecimal(totalPrice);

                            string startDate = "", endDate = "";

                            int itemIndex = BookingExtraSelections.IndexOf(extra);
                            startDate = DateTime.Parse(@extra.ExtraRentalDate.ToString()).ToString(format);
                            if (extra.ExtraReturnDate != null)
                            { endDate = DateTime.Parse(@extra.ExtraReturnDate.ToString()).ToString(format); }

                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <a href="#"><b class="toTranslate">@extra.BookingExtra.BookingExtraName</b></a>
                                    <div class="pull-right">
                                        @*      <button class="btn btn-mini btn-info"><i class="fa fa-fw fa-pencil-square-o"></i>@Html.ActionLink("Edit", "EditPropertyBooking", "EditProvisionalBooking", new { StartDate = startDate, EndDate = endDate, PRCRef = @prop.BookingPRCReference }, null)</button>*@
                                        <button class="btn btn-mini btn-danger"><i class="fa fa-fw fa-trash-o"></i>@Html.ActionLink("Remove", "DeleteItemFromSessionBookingCart", "PropertyView", new { StartDate = startDate, EndDate = endDate, PRCRef = @extra.BookingExtraPRCReference, BookingGUID = extra.BookingGuid, SessionVariableToDeleteFrom = "Cart_ExtraBookings" }, null)</button>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="thumbnail span4">
                                        <img class="span12" src="~/ExtraImages/@extra.BookingExtraPRCReference/@templateExtra.LegacyReference/mainImage/@templateExtra.LegacyReference@_Imagejpg">
                                        
                                    </div>
                                    <div class="span8">
                                        <table class="table table-condensed">
                                            <tbody>
                                                <tr>
                                                    <td class="toTranslate">Price:</td>
                                                    <td>
                                                        <b class="price">@Html.CurrencySymbol()</b><b id="originalCurrency@{@count}" class="priceTest">@Html.CurrencyConvert(price, DependencyResolver.Current.GetService<ICurrencyConvert>())</b>
                                                    </td>
                                                    <td>
                                                        <b id="convertedCurrency@{@count}"></b>
                                                    </td>
                                                </tr>
                                                
                                                @{ count ++; }
                                                <tr>
                                                    <td class="toTranslate">Extra Services Price:</td>
                                                    <td>
                                                        <b class="price">@Html.CurrencySymbol()</b><b id="originalCurrency@{@count}" class="pricetest">@Html.CurrencyConvert(extraPrice, DependencyResolver.Current.GetService<ICurrencyConvert>())</b>
                                                    </td>
                                                    <td>
                                                        <b id="convertedCurrency@{@count}"></b>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Reference:</td>
                                                    <td>@templateExtra.LegacyReference</td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Rental Start Date:</td>
                                                    <td><a data-title="ExtraItemStartDate" data-placement="right" data-pk="1" data-viewformat="dd/mm/yyyy" data-type="date" id="editStartDate2" href="#">@extra.ExtraRentalDate.ToString().Substring(0, 10)</a></td>
                                                </tr>
                                                <tr>
                                                    <td class="toTranslate">Rental End Date:</td>
                                                    <td>
                                                        <a data-title="ExtraStartDate" data-placement="right" data-pk="1" data-viewformat="dd/mm/yyyy" data-type="date" id="editEndDate2" href="#">
                                                            @{
                                                                if (extra.ExtraReturnDate != null)
                                                                {
                                                                    @extra.ExtraReturnDate.ToString().Substring(0, 10);
                                                                }
                                                                else
                                                                {
                                                                    var na = "N/A";
                                                                    @na;
                                                                }
                                                            }
                                                        </a>
                                                    </td>
                                                </tr>
                                                <tr hidden>
                                                    <td id="ExtraIndex_@itemIndex">@itemIndex</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                            count++;
                        }
                    }

                }
            </div>
        </div>

        <div class="row-fluid">
            <div class="pull-right">
                <div id="price" class="price lightGrey">
                    <h4>
                        <label class="toTranslate">Total:</label> 
                        <b>@Html.CurrencySymbol()</b><b id="originalCurrency@{@count}">@Html.CurrencyConvert(Decimal.Round(Convert.ToDecimal(runningTotalPrice.ToString()), 2), DependencyResolver.Current.GetService<ICurrencyConvert>())</b>                        
                        <b id="convertedCurrency@{@count}" hidden></b>
                        <br />
                        <small class="toTranslate">Inc. VAT</small>
                    </h4>
                </div>
            </div>
            
            @{ count++; }

            @*end of items*@
        </div>
        <!-- checkout outer wrap -->

        <div style="margin-bottom: 70px"></div>
        <div class="row-fluid" style="position: absolute; bottom: 0; right: 0;">
            <div class="span12 modal-footer pull-right" style="padding: 25px;">
                <a class="btn" style="color: #fff !important;" href="~/Home/BookCarRental"><i class="fa fa-fw fa-long-arrow-left"></i><css-decorator class="toTranslate">Back</css-decorator></a>
                <a class="btn btn-success" href="~/DetailVerify/GetBookingDetails"><css-decorator class="toTranslate">Continue</css-decorator><i class="fa fa-fw fa-long-arrow-right"></i></a>
            </div>
        </div>
    </div>
    <div class="span3">
        @{ Html.RenderPartial("SideBookingFormPartialView");
        }

    </div>
</div>




